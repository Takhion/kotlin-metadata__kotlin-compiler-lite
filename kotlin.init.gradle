// TODO update to .kts.gradle once JetBrains/kotlin starts using Gradle 4.6

log("ENABLED")

final consts = file("build/consts.xml").with { file -> new Properties().with { loadFromXML(new FileInputStream(file)); it } }

final kotlinVersion = consts["kotlinVersion"] as String
final injectedDir = consts["injectedDir"].with { file(it) }
final injectedModuleNames = consts["injectedModuleNames"].with { (it as String).split(":").toList() }

final jdk6 = 16
final jdk8 = 18

settingsEvaluated { settings ->
    final List<String> projectNames = []
    injectedModuleNames.forEach { projectNames += addExtraProject(settings, injectedDir, it) }
    rootProject {
        ext["deployVersion"] = kotlinVersion
        log("set root extra deployVersion=$kotlinVersion")

        (jdk6..jdk8).reverse().inject(System.getenv("JAVA_HOME")) { javaHome, jdk ->
            final jdkEnv = "JDK_$jdk"
            final jdkHome = findProperty(jdkEnv) ?: System.getenv(jdkEnv) ?: javaHome
            ext[jdkEnv] = jdkHome
            log("set root extra $jdkEnv=$jdkHome")
            jdkHome
        }

        project(projectNames.first()).afterEvaluate {
            setDefaultTasks(it.defaultTasks)
            log("set default tasks on root project from project '${it.path}': $it.defaultTasks")
        }
    }
}

private void log(String message) {
    println("Settings override: $message")
}

private String addExtraProject(Settings settings, File parentDir, String dirName) {
    settings.with {
        final projectDir = file("$parentDir/$dirName")
        final logicalPath = ":${parentDir.name}:$dirName"
        include(logicalPath)
        project(logicalPath).projectDir = projectDir
        log("injected project '$logicalPath' from '$projectDir'")
        return logicalPath
    }
}
